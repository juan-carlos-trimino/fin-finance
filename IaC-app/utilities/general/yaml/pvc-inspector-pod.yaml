# To view the contents of a Persistent Volume (PV) after a CronJob has completed, you must use a
# temporary pod to access the Persistent Volume Claim (PVC) and execute commands against it.
# 1. Find the completed Job and Pod
#    Get the list of jobs from your CronJob.
#    $ kubectl get jobs --selector=cronjob.kubernetes.io/name=fin-postgres-cronjob-backup -n finances
#    Find the name of the most recent pod.
#    $ kubectl get pods --selector=job-name=<job-name>
# 2. Create a temporary pod to inspect the PVC
#    The most reliable method is to create a one-off pod for inspection.
#    Apply the manifest to create the pod.
#    $ kubectl apply -f ./utilities/general/yaml/pvc-inspector-pod.yaml -n finances
# 3. Use kubectl exec to list the directory
#    Once the pvc-inspector pod is running, you can use kubectl exec to run commands inside it.
#    Verify the pod is running.
#    $ kubectl get pods pvc-inspector -n finances
#    List the contents of the mounted directory.
#    $ kubectl exec pvc-inspector-pod -- ls -la /wsf_data_dir
# 4. Clean up the inspector pod.
#    After you're finished inspecting the volume, delete the temporary pod to free up resources.
#    $ kubectl delete pod pvc-inspector-pod -n finances

# if you are using ReadWriteOnce access mode for the PVC, you need to ensure that the inspector pod is placedddd in the same node as the pod generated by cronjob.
# To placeddd this pod on the required node, you need to find the node where the cronjob executed.

# kubectl get jobs -o=jsonpath='{.items[?(@.metadata.ownerReferences[*].kind=="CronJob" && @.metadata.ownerReferences[*].name=="fin-postgres-cronjob-backup")].metadata.name}'




apiVersion: v1
kind: Pod
metadata:
  name: pvc-inspector-pod
spec:
  restartPolicy: OnFailure  # Or Never, since it's a one-off task
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: "topology.kubernetes.io/zone"
        labelSelector:
          matchExpressions:
          - key: postgres-backup
            operator: In
            values:
            - cronjob-backup
  containers:
  - name: pvc-inspector-container
    image: busybox
    command: ["/bin/sh", "-c", "sleep 3600s"]  # Keep the pod running for debugging
    volumeMounts:
    - name: wsf  # <-- Replace with the name of your volume mount
      mountPath: /wsf_data_dir  # <-- Replace with the path
  volumes:
  - name: wsf  # <-- Replace with the name of your volume
    persistentVolumeClaim:
      claimName: wsf-pvc  # <-- Replace with the name of your PVC
